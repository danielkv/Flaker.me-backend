[{"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\app.js":"1","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\controller\\authentication.js":"2","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\controller\\bucket.js":"3","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\controller\\installDB.js":"4","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\directives\\index.js":"5","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\model\\company.js":"6","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\model\\companyMeta.js":"7","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\model\\file.js":"8","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\model\\index.js":"9","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\model\\user.js":"10","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\model\\userMeta.js":"11","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\router.js":"12","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\schema\\address.js":"13","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\schema\\company.js":"14","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\schema\\file.js":"15","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\schema\\index.js":"16","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\schema\\meta.js":"17","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\schema\\phone.js":"18","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\schema\\user.js":"19","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\services\\connection.js":"20","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\services\\gcloud.js":"21","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\services\\setup.js":"22","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\utils\\files.js":"23","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\utils\\index.js":"24"},{"size":819,"mtime":1578749353705,"results":"25","hashOfConfig":"26"},{"size":1440,"mtime":1578694987113,"results":"27","hashOfConfig":"26"},{"size":528,"mtime":1578617168132,"results":"28","hashOfConfig":"26"},{"size":1776,"mtime":1578608134752,"results":"29","hashOfConfig":"26"},{"size":0,"mtime":1578749483836,"results":"30","hashOfConfig":"26"},{"size":431,"mtime":1578606318539,"results":"31","hashOfConfig":"26"},{"size":2159,"mtime":1578606155657,"results":"32","hashOfConfig":"26"},{"size":466,"mtime":1577726539558,"results":"33","hashOfConfig":"26"},{"size":382,"mtime":1578441381340,"results":"34","hashOfConfig":"26"},{"size":1626,"mtime":1578610482854,"results":"35","hashOfConfig":"26"},{"size":2202,"mtime":1578605287420,"results":"36","hashOfConfig":"26"},{"size":735,"mtime":1578608024851,"results":"37","hashOfConfig":"26"},{"size":476,"mtime":1577726539561,"results":"38","hashOfConfig":"26"},{"size":2212,"mtime":1578750408975,"results":"39","hashOfConfig":"26"},{"size":2625,"mtime":1578756222519,"results":"40","hashOfConfig":"26"},{"size":1894,"mtime":1578750340383,"results":"41","hashOfConfig":"26"},{"size":303,"mtime":1578750425573,"results":"42","hashOfConfig":"26"},{"size":162,"mtime":1577726539563,"results":"43","hashOfConfig":"26"},{"size":5296,"mtime":1578750430317,"results":"44","hashOfConfig":"26"},{"size":351,"mtime":1577726539565,"results":"45","hashOfConfig":"26"},{"size":263,"mtime":1577730887844,"results":"46","hashOfConfig":"26"},{"size":163,"mtime":1577715788776,"results":"47","hashOfConfig":"26"},{"size":1555,"mtime":1578620041841,"results":"48","hashOfConfig":"26"},{"size":1201,"mtime":1578619967870,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14p33y0",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\app.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\controller\\authentication.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\controller\\bucket.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\controller\\installDB.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\directives\\index.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\model\\company.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\model\\companyMeta.js",["102"],"import { Model, STRING, TEXT, BOOLEAN } from 'sequelize';\r\n\r\nimport conn from '../services/connection';\r\n\r\n\r\n/*\r\n * Define modelo (tabela) para metas das empresas\r\n */\r\n\r\nclass CompanyMeta extends Model {\r\n\t/**\r\n\t * Atualiza, Remove e Cria todas metas\r\n\t * \r\n\t */\r\n\r\n\tstatic async updateAll(metas, model_instance, transaction=null) {\r\n\t\tconst metas_create = metas.filter(row=>!row.id && row.action==='create');\r\n\t\tconst metas_update = metas.filter(row=>row.id && row.action==='update');\r\n\t\tconst metas_remove = metas.filter(row=>row.id && row.action==='delete');\r\n\t\t\r\n\t\tconst [removed, created, updated] = await Promise.all([\r\n\t\t\tCompanyMeta.destroy({ where: { id: metas_remove.map(r => r.id) }, transaction }).then(() => metas_remove),\r\n\t\t\tPromise.all(metas_create.map(row => model_instance.createMeta(row, { transaction }))),\r\n\t\t\tPromise.all(metas_update.map(row => model_instance.getMetas({ where:{ id:row.id } }).then(([meta]) => {if (!meta) throw new Error('Metadado não encontrado'); return meta.update(row, { fields:['value'], transaction })})))\r\n\t\t]);\r\n\r\n\t\treturn {\r\n\t\t\tremoved,\r\n\t\t\tcreated,\r\n\t\t\tupdated,\r\n\t\t};\r\n\t}\r\n}\r\nCompanyMeta.init({\r\n\tkey: {\r\n\t\ttype: STRING,\r\n\t\tcomment: 'phone | email | document | business_hours | address | ...',\r\n\t\tset(val) {\r\n\t\t\tconst unique_types = ['document', 'limit'];\r\n\t\t\tif (unique_types.includes(val))\r\n\t\t\t\tthis.setDataValue('unique', true);\r\n\t\t\t\r\n\t\t\tthis.setDataValue('key', val);\r\n\t\t},\r\n\t\tvalidate : {\r\n\t\t\tasync isUnique (value, done) {\r\n\t\t\t\tconst meta = await CompanyMeta.findOne({ where: { companyId: this.getDataValue('companyId'), key: value } });\r\n\t\t\t\tconst unique = this.getDataValue('unique');\r\n\t\t\t\tif (meta) {\r\n\t\t\t\t\tif (meta.unique === true) return done(new Error('Esse metadado já existe, você pode apenas altera-lo'));\r\n\t\t\t\t\tif (unique === true) return done(new Error('Esse metadado deve ser unico, já existem outros metadados desse tipo.'));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn done();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tvalue: TEXT,\r\n\tunique: {\r\n\t\ttype: BOOLEAN,\r\n\t\tdefaultValue: false,\r\n\t},\r\n}, {\r\n\tmodelName: 'company_metas',\r\n\tsequelize: conn,\r\n\tname: { singular: 'meta', plural: 'metas' }\r\n});\r\n\r\nexport default CompanyMeta;","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\model\\file.js",["103"],"import { Model, STRING, INTEGER, TEXT, BOOLEAN } from 'sequelize';\r\n\r\nimport conn from '../services/connection';\r\n\r\n/*\r\n * Define modelo (tabela) de arquivos\r\n */\r\n\r\nclass File extends Model {};\r\n\r\nFile.init({\r\n\tname: STRING,\r\n\toriginalName: STRING,\r\n\tsize: INTEGER,\r\n\turl: TEXT,\r\n\tbucket: STRING,\r\n\thash: STRING,\r\n\tdeleted: {\r\n\t\ttype: BOOLEAN,\r\n\t\tdefaultValue: false,\r\n\t},\r\n},{\r\n\tmodelName : 'files', //nome da tabela\r\n\tsequelize: conn,\r\n});\r\n\r\nexport default File;","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\model\\index.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\model\\user.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\model\\userMeta.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\router.js",["104","105"],"import { Router } from 'express';\r\n\r\nimport installDataBase from './controller/installDB';\r\n\r\nconst router = Router();\r\n\r\n// networt test\r\nrouter.get('/networkTest', (req, res) => {\r\n\tif (!process.env.SETUP || process.env.SETUP !== 'true') return res.status(404).send('Not Found');\r\n\r\n\tres.send(`Connected at ${req.hostname}<br>Host: ${req.headers.host}<br>Secure connection: ${!!req.secure}<br>Protocol: ${req.protocol}`);\r\n});\r\n\r\n// networt test\r\nrouter.get('/createCompany', (req, res) => {\r\n\tres.send({\r\n\t\tname: '',\r\n\t\tdisplayName: '',\r\n\t\temail: '',\r\n\t\tmetas: [\r\n\t\t\t{\r\n\t\t\t\tkey: 'limit',\r\n\t\t\t\tvalue: 5368709120 // 5GB\r\n\t\t\t}\r\n\t\t]\r\n\t});\r\n});\r\n\r\n// rota de instalação\r\nrouter.get('/setup', installDataBase);\r\n\r\nexport default router;","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\schema\\address.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\schema\\company.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\schema\\file.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\schema\\index.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\schema\\meta.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\schema\\phone.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\schema\\user.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\services\\connection.js",["106","107","108","109"],"import Sequelize from 'sequelize';\r\n\r\n// Faz a conexão do sequelize com o servidor\r\nconst instance = new Sequelize(process.env.MYSQL_DB, process.env.MYSQL_USER, process.env.MYSQL_PASSWORD, {\r\n\thost : process.env.MYSQL_HOST,\r\n\tdialect : 'mysql',\r\n\t//logging: false,\r\n\tpool : {\r\n\t\tmax:30,\r\n\t\tmin:0,\r\n\t\tidle: 10000,\r\n\t},\r\n});\r\n\r\nexport default instance;","C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\services\\gcloud.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\services\\setup.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\utils\\files.js",[],"C:\\Users\\danie\\Documents\\GitHub\\Flaker.me-backend\\src\\utils\\index.js",[],{"ruleId":"110","severity":2,"message":"111","line":24,"column":1,"nodeType":"112","messageId":"113"},{"ruleId":"114","severity":2,"message":"115","line":9,"column":28,"nodeType":"116","messageId":"117","endLine":9,"endColumn":29,"fix":"118"},{"ruleId":"119","severity":2,"message":"120","line":9,"column":7,"nodeType":"121","messageId":"122","endLine":9,"endColumn":14},{"ruleId":"119","severity":2,"message":"120","line":9,"column":28,"nodeType":"121","messageId":"122","endLine":9,"endColumn":35},{"ruleId":"119","severity":2,"message":"120","line":4,"column":32,"nodeType":"121","messageId":"122","endLine":4,"endColumn":39},{"ruleId":"119","severity":2,"message":"120","line":4,"column":54,"nodeType":"121","messageId":"122","endLine":4,"endColumn":61},{"ruleId":"119","severity":2,"message":"120","line":4,"column":78,"nodeType":"121","messageId":"122","endLine":4,"endColumn":85},{"ruleId":"119","severity":2,"message":"120","line":5,"column":9,"nodeType":"121","messageId":"122","endLine":5,"endColumn":16},"max-len","This line has a length of 232. Maximum allowed is 150.","Program","max","no-extra-semi","Unnecessary semicolon.","EmptyStatement","unexpected",{"range":"123","text":"124"},"no-undef","'process' is not defined.","Identifier","undef",[192,202],"}\r\n\r\nFile"]